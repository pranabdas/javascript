"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([["1311"],{2211:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>l,metadata:()=>r,assets:()=>i,toc:()=>c,contentTitle:()=>t});var r=JSON.parse('{"id":"node/node","title":"Introduction to Node.js","description":"For this lesson, you must have Node.js installed. We will write our codes in","source":"@site/docs/node/node.md","sourceDirName":"node","slug":"/node/","permalink":"/javascript/node/","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/javascript/blob/main/docs/node/node.md","tags":[],"version":"current","frontMatter":{"title":"Introduction to Node.js","sidebar_label":"Node.js"},"sidebar":"docs","previous":{"title":"Node","permalink":"/javascript/category/node"},"next":{"title":"Standar I/O","permalink":"/javascript/node/io"}}'),o=s("5893"),a=s("65");let l={title:"Introduction to Node.js",sidebar_label:"Node.js"},t=void 0,i={},c=[];function d(e){let n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["For this lesson, you must have ",(0,o.jsx)(n.strong,{children:"Node.js"})," installed. We will write our codes in\na file called ",(0,o.jsx)(n.code,{children:"intro.js"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'console.log("Hello Node.js!")\n'})}),"\n",(0,o.jsx)(n.p,{children:"Now we can run the javascript by typing the following in the terminal:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"$ node intro.js\n\nHello Node.js!\n"})}),"\n",(0,o.jsx)(n.p,{children:"Next, let's define a variable and print that out."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let message = "Hello world from the Node.js";\n\nconsole.log(message);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note that you can omit the ",(0,o.jsx)(n.code,{children:".js"})," from the filename when running ",(0,o.jsx)(n.code,{children:"node"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"node intro\n\nHello world from the Node.js\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Here the ",(0,o.jsx)(n.code,{children:"console"})," is a global variable and it is available to us without\nimporting or requiring any ",(0,o.jsx)(n.code,{children:"class"}),". There are several other global variables\nlike ",(0,o.jsx)(n.code,{children:"__dirname"})," or ``__filename`"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"console.log(__dirname);\nconsole.log(__filename);\n\n/Users/Pranab/Documents/github/js-learning/src/node\n/Users/Pranab/Documents/github/js-learning/src/node/intro.js\n"})}),"\n",(0,o.jsxs)(n.p,{children:["We can import external modules by using ",(0,o.jsx)(n.code,{children:"require"}),". Let's say we import the\n",(0,o.jsx)(n.code,{children:"path"})," module which ships with the Node.js ans load that into a variable called\n",(0,o.jsx)(n.code,{children:"path"}),". Then we try to extract just the filename using a path method."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const  path = require('path');\nconsole.log(`The file name is : ${path.basename(__filename)}`);\n\nThe file name is : intro.js\n"})}),"\n",(0,o.jsx)(n.p,{children:"Note that for template strings back tics are used instead of single/double\nquotes."}),"\n",(0,o.jsxs)(n.p,{children:["Another important global object is ",(0,o.jsx)(n.code,{children:"process"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"console.log(process.pid);\nconsole.log(process.versions.node);\n\n89046\n12.16.2\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"process.argv"})," to pass arguments:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"console.log(process.argv);\n\n[\n  '/usr/local/bin/node',\n  '/Users/Pranab/Documents/github/js-learning/src/node/intro'\n]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["So when we run our program by typing ",(0,o.jsx)(n.code,{children:"node intro"}),", we are simply passing an\narray. We can pass more variables:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"node intro hello \"pranab das\"\n\n[\n  '/usr/local/bin/node',\n  '/Users/Pranab/Documents/github/js-learning/src/node/intro',\n  'hello',\n  'pranab das'\n]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Now we can create ",(0,o.jsx)(n.code,{children:"flags"})," to pass more arguments to any command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"node intro --user \"pranab das\" --greeting hello\n\n[\n  '/usr/local/bin/node',\n  '/Users/Pranab/Documents/github/js-learning/src/node/intro',\n  '--user',\n  'pranab das',\n  '--greeting',\n  'hello'\n]\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const grab = flag => {\n    let indexAfterFlag = process.argv.indexOf(flag) + 1;\n    return process.argv[indexAfterFlag];\n}\n\nconst greeting = grab("--greeting");\nconst user = grab("--user");\n\nconsole.log(greeting, user);\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'node intro --user "pranab das" --greeting hello\n\nhello pranab das\n'})})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},65:function(e,n,s){s.d(n,{Z:function(){return t},a:function(){return l}});var r=s(7294);let o={},a=r.createContext(o);function l(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);