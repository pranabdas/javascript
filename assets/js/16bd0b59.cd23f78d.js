"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([[22],{9374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>i});var o=t(5893),a=t(1151);const s={title:"Variable scope"},c=void 0,r={id:"functions-objects/variable-scope",title:"Variable scope",description:"When you define a function in the root of your script, it is available globally",source:"@site/docs/functions-objects/variable-scope.md",sourceDirName:"functions-objects",slug:"/functions-objects/variable-scope",permalink:"/javascript/functions-objects/variable-scope",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/javascript/blob/main/docs/functions-objects/variable-scope.md",tags:[],version:"current",frontMatter:{title:"Variable scope"},sidebar:"docs",previous:{title:"Functions",permalink:"/javascript/functions-objects/functions"},next:{title:"Objects",permalink:"/javascript/functions-objects/objects"}},l={},i=[{value:"let and const",id:"let-and-const",level:3},{value:"Default values for function argument",id:"default-values-for-function-argument",level:3},{value:"Arbitrary number of arguments",id:"arbitrary-number-of-arguments",level:3}];function u(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"When you define a function in the root of your script, it is available globally\nthroughout the script, including inside the function block. When you define a\nvariable inside the function block, it is available only inside the function\nblock."}),"\n",(0,o.jsx)(n.h3,{id:"let-and-const",children:"let and const"}),"\n",(0,o.jsxs)(n.p,{children:["Once ",(0,o.jsx)(n.code,{children:"const"})," is defined it cannot be changed. Like"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const PI = 3.14;\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The value of a ",(0,o.jsx)(n.code,{children:"const"})," cannot be changed later. On the other hand ",(0,o.jsx)(n.code,{children:"let"})," is\nanother variable type, which has even smaller scope than ",(0,o.jsx)(n.code,{children:"var"}),". ",(0,o.jsx)(n.code,{children:"let"})," has scope\nonly in a block level."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"function varScope() {\n    var localVar = 1;\n\n    if (localVar) {\n        var localVar = 2;\n        console.log(localVar);\n    }\n    console.log(localVar);\n}\n\nvarScope()\n\n2\n2\n"})}),"\n",(0,o.jsxs)(n.p,{children:["So we see that if we reassign a variable inside a block, the variable is changed\nfor the whole function. Here comes the ",(0,o.jsx)(n.code,{children:"let"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"function varScope() {\n    var localVar = 1;\n\n    if (localVar) {\n        let localVar = 2;\n        console.log(localVar);\n    }\n    console.log(localVar);\n}\n\nvarScope()\n\n2\n1\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Note that if we define the first variable with ",(0,o.jsx)(n.code,{children:"let"}),", it's scope will be whole\nfunction block while the scope of second ",(0,o.jsx)(n.code,{children:"let"})," is only the if-condition block."]}),"\n",(0,o.jsx)(n.h3,{id:"default-values-for-function-argument",children:"Default values for function argument"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'function greetUser(greetingMessage="Hello", userName="User") {\n    console.log(greetingMessage + " " + userName);\n};\n\n> greetUser()\nHello User\n\n> greetUser("Welcome")\nWelcome User\n\n> greetUser("Welcome", "Pranab")\nWelcome Pranab\n'})}),"\n",(0,o.jsx)(n.h3,{id:"arbitrary-number-of-arguments",children:"Arbitrary number of arguments"}),"\n",(0,o.jsxs)(n.p,{children:["We can access the arguments by the ",(0,o.jsx)(n.code,{children:"arguments"})," object."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"function sumAll() {\n    var sum = 0;\n\n    for (var ii=0; ii<arguments.length; ii++) {\n        sum += arguments[ii];\n    };\n    return sum;\n};\n\n> sumAll(2, 3, 4)\n9\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var o=t(7294);const a={},s=o.createContext(a);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);