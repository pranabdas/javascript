"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([[277],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5721:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={title:"Standard input and output",sidebar_label:"Standar I/O"},c=void 0,l={unversionedId:"node/io",id:"node/io",title:"Standard input and output",description:"We can use process to print something on the terminal, like console.log.",source:"@site/docs/node/io.md",sourceDirName:"node",slug:"/node/io",permalink:"/javascript/node/io",draft:!1,editUrl:"https://github.com/pranabdas/javascript/blob/main/docs/node/io.md",tags:[],version:"current",frontMatter:{title:"Standard input and output",sidebar_label:"Standar I/O"},sidebar:"docs",previous:{title:"Node.js",permalink:"/javascript/node/"},next:{title:"Core modules",permalink:"/javascript/node/core-modules"}},u={},p=[{value:"Example",id:"example",level:3},{value:"Timer",id:"timer",level:3}],d={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We can use ",(0,a.kt)("inlineCode",{parentName:"p"},"process")," to print something on the terminal, like ",(0,a.kt)("inlineCode",{parentName:"p"},"console.log"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'process.stdout.write("Hello ");\nprocess.stdout.write("Node.js !\\n");\n\nHello Node.js !\n')),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const questions = [\n    "What is your name?",\n    "How old are you?",\n    "What is your mother tongue?"\n]\n\nconst ask = (index = 0) => {\n    process.stdout.write(`${questions[index]} \\n-:>`);\n}\n\nask();\n\nconst ans = [];\n\nprocess.stdin.on("data", data => {\n    ans.push(data.toString().trim());\n\n    if (ans.length < questions.length) {\n        ask(ans.length);\n    } else {\n        process.exit();\n    }\n});\n\nprocess.on(\'exit\', () => {\n    const [name, age, lang] = ans;\n    console.log(`Hey ${name}, so you are ${age} years old and you can speak ${lang}.`)\n});\n')),(0,a.kt)("h3",{id:"timer"},"Timer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const waitTime = 5000; // time is in millisecond\nconst waitInterval = 500;\nlet currentTime = 0;\n\nconst incTime = () => {\n    currentTime += waitInterval;\n    const pc = Math.floor(currentTime/waitTime*100);\n    process.stdout.clearLine();\n    process.stdout.cursorTo(0);\n    process.stdout.write(`Waiting... ${pc}%`);\n};\n\nconsole.log(`Setting a waiting time of ${waitTime/1000} seconds.`);\n\nconst timerFinished = () => {\n    clearInterval(interval);\n    process.stdout.clearLine();\n    process.stdout.cursorTo(0);\n    console.log("Done.");\n};\n\nconst interval = setInterval(incTime, waitInterval);\nsetTimeout(timerFinished, waitTime);\n')))}m.isMDXComponent=!0}}]);