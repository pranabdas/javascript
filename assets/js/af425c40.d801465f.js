"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([[468],{4065:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"node/callbacks","title":"Understanding callbacks","description":"As we have seen we are using many asynchronous functions. These functions can","source":"@site/docs/node/callbacks.md","sourceDirName":"node","slug":"/node/callbacks","permalink":"/javascript/node/callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/javascript/blob/main/docs/node/callbacks.md","tags":[],"version":"current","frontMatter":{"title":"Understanding callbacks","sidebar_label":"Callbacks"},"sidebar":"docs","previous":{"title":"File system","permalink":"/javascript/node/file-system"},"next":{"title":"Module Exports","permalink":"/javascript/node/module-exports"}}');var a=s(4848),o=s(8453);const c={title:"Understanding callbacks",sidebar_label:"Callbacks"},i=void 0,l={},r=[];function d(n){const e={code:"code",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"As we have seen we are using many asynchronous functions. These functions can\nexecute simultaneously alongside the main function. The main function does not\nwait for the asynchronous function to finish. In other words, async function\ndoes not block the main block execution."}),"\n",(0,a.jsx)(e.p,{children:"In case of async function, we can pass another function as second argument. This\nis the callback function. Once the async function has finished, it can invoke\nour callback function. We can define what to do once the async task has finished\ninside this callback function."}),"\n",(0,a.jsxs)(e.p,{children:["For example async ",(0,a.jsx)(e.code,{children:"setTimeout()"})," function takes two arguments: ",(0,a.jsx)(e.code,{children:"setTimeout(callback, delay)"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'let delay = 5000;\nconsole.log(`Waiting for ${delay/1000} sec.`);\n\nsetTimeout(() => {\n    console.log("The waiting is over!");\n}, delay);\n\nconsole.log("This is in the main program.");\n'})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>c,x:()=>i});var t=s(6540);const a={},o=t.createContext(a);function c(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:c(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);